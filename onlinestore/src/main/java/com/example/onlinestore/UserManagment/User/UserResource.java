package com.example.onlinestore.UserManagment.User;

import com.example.onlinestore.UserManagment.Admin.Admin;
import com.example.onlinestore.UserManagment.Buyer.Buyer;
import com.example.onlinestore.UserManagment.Buyer.BuyerRepository;
import com.example.onlinestore.UserManagment.Buyer.BuyerService;
import com.example.onlinestore.UserManagment.StoreOwner.StoreOwner;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.*;

@Controller // This means that this class is a Controller
@RequestMapping(path = "/User") // This means URL's start with /demo (after Application path)

public class UserResource {
    @Autowired // This means to get the bean called userRepository
    // Which is auto-generated by Spring, we will use it to handle the data
    private UserRepository userRepository;

    @PostMapping(path = "/add") // Map ONLY POST Requests
    public @ResponseBody
    String add(@RequestParam String username, @RequestParam String password , @RequestParam String email,@RequestParam String name,
             @RequestParam String age, @RequestParam int Type,  String adrress)
    {
        UserService test = new UserService();
        if (test.checkValidation(email,password,username))
        {
            switch (Type) {
                case 1:
                    Buyer buyer = new Buyer();

                    buyer.setName(name);
                    buyer.setEmail(email);
                    buyer.setPassword(password);
                    buyer.setUsername(username);
                    buyer.setAge(age);
                    buyer.setType(Type);
                    buyer.setAdrress(adrress);
                    BuyerService buyerservice = new BuyerService();
                    if(!buyerservice.checkValidation(adrress))
                        return "Error!!!\nData Not Saved222";
                    else
                       userRepository.save(buyer);
                       break;
                case 2:
                    Admin admin = new Admin();
                    admin.setName(name);
                    admin.setEmail(email);
                    admin.setPassword(password);
                    admin.setUsername(username);
                    admin.setAge(age);
                    admin.setType(Type);
                    userRepository.save(admin);
                    break;
                case 3:
                    StoreOwner storeowner = new StoreOwner();
                    storeowner.setName(name);
                    storeowner.setEmail(email);
                    storeowner.setPassword(password);
                    storeowner.setUsername(username);
                    storeowner.setAge(age);
                    storeowner.setType(Type);
                    userRepository.save(storeowner);
                    break;
            }
            return "saved";
        }
        else
        {
            return "Error!!!\nData Not Saved";
        }
    }


}
